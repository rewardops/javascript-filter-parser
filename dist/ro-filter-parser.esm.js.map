{"version":3,"file":"ro-filter-parser.esm.js","sources":["../src/util/category.js","../src/util/object-to-string.js","../src/util/siv.js","../src/util/clean-object.js","../src/ro-filter-parser.js"],"sourcesContent":["/* eslint-disable no-param-reassign */\nconst categoryTypes = [\n  'includedWithSubcategories',\n  'includedWithoutSubcategories',\n  'excludedWithSubcategories',\n  'excludedWithoutSubcategories',\n];\n\nexport function setCategoryCodes(subtype, values) {\n  const updatedCat = {};\n  if (subtype === 'subcategory-included') {\n    updatedCat.includedWithSubcategories = [...values];\n  }\n  if (subtype === 'subcategory-excluded') {\n    updatedCat.includedWithoutSubcategories = [...values];\n  }\n  return updatedCat;\n}\n\nexport function addCategoryCodes(categoryObject, subtype, values) {\n  // If the value already exists anywhere in categories, remove it\n  categoryTypes.forEach(type => {\n    if (categoryObject[type]) {\n      categoryObject[type] = categoryObject[type].filter(value => !values.includes(value));\n    }\n  });\n  if (subtype === 'subcategory-included') {\n    const currentValues = categoryObject.includedWithSubcategories || [];\n    categoryObject.includedWithSubcategories = Array.from(new Set([...currentValues, ...values]));\n  }\n  if (subtype === 'subcategory-excluded') {\n    const currentValues = categoryObject.includedWithoutSubcategories || [];\n    categoryObject.includedWithoutSubcategories = Array.from(new Set([...currentValues, ...values]));\n  }\n  return categoryObject;\n}\n","// Coz flatMap seems to be implemented only in Node11\nconst concat = (x, y) => x.concat(y);\n\nexport default function convertObjectToString(filter) {\n  if (filter.constructor === Array) {\n    return filter.reduce((str, f) => {\n      if (str === '') {\n        return `(${convertObjectToString(f)})`;\n      }\n      return `(${str.substring(1, str.length - 1)}|${convertObjectToString(f)})`;\n    }, '');\n  }\n  if (filter.constructor === Object) {\n    const filterArray = [];\n    if (filter.SIV_ATTRIBUTE) {\n      const filterString = Object.keys(filter.SIV_ATTRIBUTE)\n        .map(type => Object.keys(filter.SIV_ATTRIBUTE[type]).map(subtype => {\n          const equalOp = subtype.includes('include') ? '==' : '!=';\n          const values = filter.SIV_ATTRIBUTE[type][subtype].map(value => `${value}`).join(',');\n          return `SIV_ATTRIBUTE(${type})${equalOp}[${values}]`;\n        }))\n        .reduce(concat, [])\n        .join('&');\n\n      filterArray.push(filterString);\n    }\n    if (filter.CATEGORY) {\n      const { CATEGORY } = filter;\n      const filterString = Object.keys(CATEGORY)\n        .map(key => {\n          const equalOp = key.includes('include') ? '==' : '!=';\n          const subcategoryOp = key.includes('Without') ? 'false' : 'true';\n          const values = CATEGORY[key].map(value => `\"${value}\"`).join(',');\n          return `CATEGORY(${subcategoryOp})${equalOp}[${values}]`;\n        })\n        .join('&');\n      filterArray.push(filterString);\n    }\n    if (filter.array) {\n      filterArray.push(convertObjectToString(filter.array));\n    }\n    return filterArray.join('&');\n  }\n  return '';\n}\n","/* eslint-disable no-param-reassign */\nexport default function setSivValues(parsedFilter, sivExcludedFilter, subtype, values) {\n  let excludedIds = sivExcludedFilter ? sivExcludedFilter.SIV_ATTRIBUTE.id.excluded : [];\n  if (subtype === 'id-excluded') {\n    excludedIds = values;\n    // Rewrite this so that we don't need param reassign\n    parsedFilter.forEach((f, index) => {\n      if (\n        parsedFilter[index].SIV_ATTRIBUTE\n        && parsedFilter[index].SIV_ATTRIBUTE.id\n        && parsedFilter[index].SIV_ATTRIBUTE.id.included\n      ) {\n        parsedFilter[index].SIV_ATTRIBUTE.id.included = parsedFilter[index].SIV_ATTRIBUTE.id.included.filter(\n          id => !values.includes(id),\n        );\n      }\n      // If all the included values are filtered out, delete SIV_ATTRIBUTE key\n      if (\n        parsedFilter[index].SIV_ATTRIBUTE\n        && parsedFilter[index].SIV_ATTRIBUTE.id\n        && parsedFilter[index].SIV_ATTRIBUTE.id.included\n        && parsedFilter[index].SIV_ATTRIBUTE.id.included.length === 0\n      ) {\n        delete parsedFilter[index].SIV_ATTRIBUTE.id;\n      }\n    });\n  }\n  if (subtype === 'id-included') {\n    let updated = false;\n    if (sivExcludedFilter) {\n      excludedIds = excludedIds.filter(id => !values.includes(id));\n    }\n    parsedFilter.forEach((f, index) => {\n      if (\n        parsedFilter[index].SIV_ATTRIBUTE\n        && parsedFilter[index].SIV_ATTRIBUTE.id\n        && parsedFilter[index].SIV_ATTRIBUTE.id.included\n      ) {\n        parsedFilter[index].SIV_ATTRIBUTE.id.included = values;\n        updated = true;\n      }\n    });\n    if (!updated) {\n      parsedFilter.push({ SIV_ATTRIBUTE: { id: { included: values } } });\n    }\n  }\n  if (subtype === 'supplier-included') {\n    parsedFilter.push({ SIV_ATTRIBUTE: { supplier: { included: values } } });\n  }\n  const updatedSivExcludedFilter = excludedIds.length ? { SIV_ATTRIBUTE: { id: { excluded: excludedIds } } } : null;\n  return { parsedFilter, updatedSivExcludedFilter };\n}\n","/**\n * This is used to remove any empty objects going through it recursively\n *\n * @export\n * @param {Object} obj\n * @returns {Object}\n *\n * @example\n  const test = {\n    SIV: {\n      id: {},\n      incl: [1]\n    },\n    SIV2: {\n      id: {\n        included: {}\n      }\n    }\n  }\n\n  cleanObject(test)\n  Output: { SIV: { incl: [ 1 ] } }\n */\nexport default function cleanObject(obj) {\n  const resultObject = {};\n  Object.keys(obj).forEach(key => {\n    if (obj[key].constructor === Object) {\n      resultObject[key] = cleanObject(obj[key]);\n      if (JSON.stringify(resultObject[key]) === '{}') {\n        delete resultObject[key];\n      }\n    } else {\n      resultObject[key] = obj[key];\n    }\n  });\n  return resultObject;\n}\n","import { setCategoryCodes, addCategoryCodes } from './util/category';\nimport convertObjectToString from './util/object-to-string';\nimport setSivValues from './util/siv';\nimport cleanObject from './util/clean-object';\n\nconst nearley = require('nearley');\nconst grammar = require('../src/compiled-grammar/main');\n\n/**\n * The main function of the library. Parses the filter string to return a JSON object\n *\n * @export\n * @param {string} filterString - the filter string\n * @returns {object} - a json representation of the string\n */\nexport function parseFilterString(filterString) {\n  // Create a Parser object from our grammar.\n  const parser = new nearley.Parser(nearley.Grammar.fromCompiled(grammar));\n  parser.feed(filterString);\n\n  const { results } = parser;\n  if (results.length > 1) return 'Ambigous grammar. Bad!';\n  if (results.length === 0) return 'Empty result. Weird!';\n\n  return results[0];\n}\n\nexport function addToFilter(definition, { label, subtype, values }) {\n  const parsedFilter = parseFilterString(definition);\n  switch (label) {\n    case 'CATEGORY':\n      parsedFilter.forEach((filter, index) => {\n        if (parsedFilter[index].CATEGORY) {\n          parsedFilter[index].CATEGORY = addCategoryCodes(filter.CATEGORY, subtype, values);\n        }\n      });\n      break;\n\n    default:\n      break;\n  }\n  return convertObjectToString(parsedFilter);\n}\n\nexport function setFilter(definition, { label, subtype, values }) {\n  let parsedFilter = parseFilterString(definition);\n\n  // SIV ATTRIBUTE Excluded is a special case where if the value is excluded that is \"ANDed\" to all the other rules.\n  // So we extract it out\n  let sivExcludedFilter;\n  parsedFilter.forEach((filter, index) => {\n    // This whole if condition is to achieve the SIV excluded extraction mentioned above\n    if (parsedFilter[index].SIV_ATTRIBUTE && parsedFilter[index].SIV_ATTRIBUTE.id.excluded) {\n      if (sivExcludedFilter) {\n        sivExcludedFilter.SIV_ATTRIBUTE.id.excluded.push(...parsedFilter[index].SIV_ATTRIBUTE.id.excluded);\n      } else {\n        sivExcludedFilter = {\n          SIV_ATTRIBUTE: {\n            id: {\n              excluded: parsedFilter[index].SIV_ATTRIBUTE.id.excluded,\n            },\n          },\n        };\n      }\n      delete parsedFilter[index].SIV_ATTRIBUTE.id.excluded;\n    }\n  });\n\n  // Assuming filters are currently going to have only a single & at the top level for now\n  if (parsedFilter.length === 1 && parsedFilter[0].array) {\n    parsedFilter = parsedFilter[0].array;\n  }\n\n  switch (label) {\n    case 'CATEGORY': {\n      let updated = false;\n      parsedFilter.forEach((filter, index) => {\n        if (parsedFilter[index].CATEGORY) {\n          parsedFilter[index].CATEGORY = setCategoryCodes(subtype, values);\n          updated = true;\n        }\n      });\n      if (!updated) {\n        const CATEGORY = setCategoryCodes(subtype, values);\n        parsedFilter.push({ CATEGORY });\n      }\n      break;\n    }\n    case 'SIV': {\n      ({ updatedSivExcludedFilter: sivExcludedFilter, parsedFilter } = setSivValues(\n        parsedFilter,\n        sivExcludedFilter,\n        subtype,\n        values,\n      ));\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  // Remove any empty objects (maybe caused by the SIV extraction)\n  parsedFilter.forEach((filter, index) => {\n    parsedFilter[index] = cleanObject(parsedFilter[index]);\n  });\n  parsedFilter = parsedFilter.filter(filter => JSON.stringify(filter) !== '{}');\n  if (sivExcludedFilter && parsedFilter.length) {\n    sivExcludedFilter.array = parsedFilter;\n  }\n  const convertedFilter = sivExcludedFilter || parsedFilter;\n  return convertObjectToString(convertedFilter);\n}\n"],"names":[],"mappings":"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"}