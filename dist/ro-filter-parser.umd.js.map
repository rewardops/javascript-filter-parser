{"version":3,"file":"ro-filter-parser.umd.js","sources":["../src/ro-filter-parser.js"],"sourcesContent":["const nearley = require('nearley');\nconst grammar = require('./compiled-grammar/main');\n\n/**\n * The main function of the library. Parses the filter string to return a JSON object\n *\n * @export\n * @param {string} input - the filter string\n * @returns {object} - a json representation of the string\n */\nexport function parseFilterString(input) {\n  // Create a Parser object from our grammar.\n  const parser = new nearley.Parser(nearley.Grammar.fromCompiled(grammar));\n  parser.feed(input);\n\n  const results = parser.results;\n  if (results.length > 1) return 'Ambigous grammar. Bad!';\n  if (results.length === 0) return 'Empty result. Weird!';\n\n  return results[0];\n}\n"],"names":[],"mappings":";;;;;;EAAA,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;EACnC,MAAM,OAAO,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;;EAEnD;EACA;EACA;EACA;EACA;EACA;EACA;AACA,EAAO,SAAS,iBAAiB,CAAC,KAAK,EAAE;EACzC;EACA,EAAE,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3E,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;EAErB,EAAE,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;EACjC,EAAE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,wBAAwB,CAAC;EAC1D,EAAE,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,sBAAsB,CAAC;;EAE1D,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC;;;;;;;;;;;;"}